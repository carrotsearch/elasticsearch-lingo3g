buildscript {
  ext {
    localversions = [
        es       : "7.11.2",
        c2plugin : "7.11.2",
        l3g      : "2.0.0-beta1"
    ]
  }

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:${localversions.es}"
  }
}

plugins {
  id 'java-library'
  id 'idea'
  id 'com.diffplug.spotless' version "5.8.2" apply false
  id 'com.carrotsearch.gradle.opts' version '0.0.6'
}

apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.java-rest-test'

apply from: file('gradle/validation/spotless.gradle')

opts {
  option([name: "license", defaultValue: null, description: "Point at your local Lingo3G license file."])
}

// This plugin's version (typically must match that of ES).
// For bugfix releases against the same ES version, you can add a bugfix suffix.
def bugfix = ""
version = "${localversions.es}${bugfix}"
group = 'com.carrotsearch'

repositories {
  mavenLocal()
  mavenCentral()
}

ext {
  licenseFile = rootProject.file('LICENSE.txt')
  noticeFile = rootProject.file('NOTICE.txt')
}

esplugin {
  name 'elasticsearch-lingo3g'
  description "Lingo3G ${localversions.l3g} Clustering Algorithm for Elasticsearch ${localversions.es} (elasticsearch-carrot2 plugin extension)"
  classname 'com.carrotsearch.lingo3g.integrations.elasticsearch.Lingo3GPlugin'
  extendedPlugins = ['elasticsearch-carrot2']
}

configurations {
  extendedZip
  extendedJar
  compileOnly.extendsFrom(extendedJar)

  lingo3g
  implementation.extendsFrom(lingo3g)

  ossPlugin
}

dependencies {
  lingo3g("com.carrotsearch.lingo3g:lingo3g:${localversions.l3g}", {
    exclude group: "org.carrot2", module: "core"
  })

  implementation("org.apache.logging.log4j:log4j-slf4j18-impl:${versions.log4j}", {
    exclude group: "org.apache.logging.log4j", module: "log4j-core"
    exclude group: "org.apache.logging.log4j", module: "log4j-api"
    exclude group: "org.slf4j"
  })

  extendedZip group: 'org.carrot2', name: 'elasticsearch-carrot2', version: localversions.c2plugin, ext: 'zip'
  extendedJar group: 'org.carrot2', name: 'elasticsearch-carrot2', version: localversions.c2plugin

  testCompile "org.assertj:assertj-core:3.13.2"

  // Let the javaRestTest see the classpath of main and tests.
  javaRestTestImplementation project.sourceSets.main.runtimeClasspath
  javaRestTestImplementation project.sourceSets.test.runtimeClasspath
}

// Set target compatibility
sourceCompatibility = 11
targetCompatibility = 11

// We don't have unit tests, only integration tests.
test.enabled = false

// Add plugin configuration files to each testClusters instance.
// 'extraConfigFile' doesn't allow directories, only files, so we
// need to add each individually
testClusters.all {
  fileTree(dir: 'src/main/config').each { file ->
    extraConfigFile 'elasticsearch-lingo3g/' + file.name, file
  }

  if (opts['license'].value) {
    extraConfigFile 'elasticsearch-lingo3g/license.xml', file(opts['license'].value)
  }

  // Add elasticsearch-carrot2 to testclusters.
  plugin project.layout.file(provider { configurations.extendedZip.singleFile })
}

// Create the "oss" (bare) distribution artifact (excludes commercial Lingo3G JARs).
task buildOssPlugin(type: Zip) {
  dependsOn tasks.getByName("bundlePlugin")

  archiveFileName = "${archivesBaseName}-${project.version}-oss.zip"
  destinationDir file("${buildDir}/distributions")

  from(zipTree(tasks.getByName("bundlePlugin").outputs.files.singleFile), {
    exclude "**/lingo3g-*"
  })
}

assemble.dependsOn buildOssPlugin

artifacts {
  ossPlugin tasks.buildOssPlugin
}

// If no Lingo3G license is specified, skip the tests.
task displayLicenseWarning() {
  doFirst {
    logger.warn("Can't test without the license (pass via -Plicense=...).")
  }
}

tasks.matching { it.name in ["javaRestTest"] }.all {
  if (!opts['license'].value) {
    enabled = false
    dependsOn displayLicenseWarning
  }
}

// TODO: real tests
// TODO: publishing
// TODO: publish ES plugins for recent versions.

// Configure publishing.
apply from: file('gradle/publishing.gradle')
